#!/usr/bin/env zsh

function update() {
    # 更新 wzsh
    cd ~/.zsh && proxyon
    git pull && git submodule update --init --recursive
    proxyoff && cd - && zsh
}

function env() {
    # 设置获取 wzsh 环境
    local envfile=~/.wzshenv
    if [[ -f $envfile ]]
    then
        cat $envfile
    fi
}

function setenv() {
    # 设置 wzsh 环境
    local envfile=~/.wzshenv
    echo $1 > $envfile
}

function make_plugin() {
    # 创建插件
    name=$1
    dirname=${WZSH_HOME}/plugins/wzsh-${name}
    zinfo "创建插件 wzsh-${name}"
    [[ -d $dirname ]] || mkdir $dirname
    touch $dirname/aliases.zsh
    zinfo "Create $dirname/aliases.zsh"
    echo '. ${WZSH_HOME}/plugins/wzsh-'${name}'/aliases.zsh' > $dirname/wzsh-${name}.zsh
    zinfo "Create $dirname/wzsh-${name}.zsh"
}

function plugin_debug() {
    # 调试插件程序
    local name=$1
    shift
    local filepath=${WZSH_HOME}/plugins/wzsh-${name}/wzsh-${name}.zsh
    if [[ ! -f $filepath ]]
    then
        filepath=${WZSH_HOME}/plugins/zsh-${name}/zsh-${name}.zsh
        if [[ ! -f $filepath ]]
        then
            zerror "${name} 插件不存在"
            return
        fi
    fi

    /bin/zsh ${filepath} $@
}

if [[ $* ]]
then
    # shell main 函数
    # ./xxxx.sh func_name params1 params2
    # 就是运行 func_name 函数并传入 params1 params2 两个参数
    local cmd="$1"
    # 将参数左移一位
    shift
    local rc=0
    $cmd "$@" || rc=$?
    return $rc
fi
